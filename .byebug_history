exit
continue
exit
dependent
dependent.birth_date = "1962/08/15"
dependent
dependent.birth_date = dependent_hash[:birth_date]
dependent
dependent.birth_date = dependent_hash[:birth_date]
dependent.birth_date = dependent_hash[birth_date]
dependent
dependent_hash[:birth_date]
row["BIRTHDATE"]
dependent_hash["BIRTHDATE"]
dependent.save!
dependent.assign_attributes(dependent_hash)
        dependent = Dependent.find_or_initialize_by(member_id: member_id)
        dependent.assign_attributes(dependent_hash)
member_id.nil?
member_id
continue
member_id
continue
member_id
continue
dependent = Dependent.find_or_initialize_by(member_id: member_id,          last_name: dependent_hash[:last_name])
          birth_date: dependent_hash[:birth_date]
          middle_name: dependent_hash[:middle_name],
          first_name: dependent_hash[:first_name],
          last_name: dependent_hash[:last_name],
          member_id: member_id,
dependent = Dependent.find_or_initialize_by(
principal_lname
member_id
continue
principal_fname
principal_lname
member_id
continue
principal_lname
member_id
continue
member_id.nil?
member_id
member
continue
exit
continue
rlship[0].premium
rlship.premium
rlship
continue
@coverage
continue
Coverage.joins(:member, :batch)
Coverage.joins(member: :batch)
@coverage.size
@coverage
continue
   29:     INNER JOIN batches AS b ON c.batch_id = b.id")
   28:     INNER JOIN members AS m ON c.member_id = m.id
   27:     SELECT c.*, m.*, b.* FROM coverages AS c
@coverage = Coverage.find_by_sql("
exit
rails s
@coverage.compute_age(@member.birth_date,coverage_params[:effectivity])
@coverage.compute_age @coverage.compute_age(@member.birth_date,coverage_params[:effectivity])
exit
@member.birth_date
@member.birt_date
@member = Member.find(coverage_params[:member_id])
@member.find(coverage_params[:member_id])
coverage_params[:member_id]
coverage_params
params
continue
member.birth_date
member = Member.find_by(id: params[:id])
Member.find_by(id: params[:id])
params
@member
@target
